@9@
package @1@ ;

@6.1@
import java.util.List;
import java.util.LinkedList;
@6.1@
import apfe.runtime.*;
import laol.parser.*;
@4.1@
@4.1@
@9@

@10@
public @11@ class @2@ extends @3@ {

    public @2@() {
    }

    private @2@(boolean isDRR) {
        super(isDRR);
    }

    @Override
    protected int getNonRecursiveChoiceIx() {
        return @4@;
    }

    @Override
    public Acceptor create() {
        return new @2@();
    }

    @Override
    public Acceptor getChoice(int ix) {
        Acceptor matcher = null  ;
		switch(ix) {
		@5@
		}
        //Keep track so if we growSeed()
        m_lastIx = ix;
        m_lastChoice = matcher;
        return matcher;
    }

    @Override
    protected boolean accepti() {
		boolean match = super.accepti();
@6.2@
        if (match && (null != getListeners())) {
            for (Listener cb : getListeners()) {
                cb.onAccept(m_lastChoice);
            }
        }
@6.2@
        return match;
    }

@4.2@ //Begin memoize
    @Override
    protected void memoize(Marker mark, Marker endMark) {
        stMemo.add(mark, this, endMark);
    }

    @Override
    protected Memoize.Data hasMemoized(Marker mark) {
        return stMemo.memoized(mark);
    }
    /**
     * Memoize for all instances of @2@.
     */
    private static final Memoize stMemo = new Memoize();
	//End memoize
@4.2@ 

@6.3@
	//Begin Listener
	static //@Override
	public void addListener(final Listener listener) {
		if (null == stListeners) {
			stListeners = new LinkedList<>();
		}
		stListeners.add(listener);
	}

	@Override
    protected Iterable<Listener> getListeners() {
		return stListeners;
	}

	private static List<Listener> stListeners;
	//End Listener
@6.3@
}
@10@
