ABSTRACT_K   "abstract"	
ALIAS_K      "alias"	    
BREAK_K		 "break"		
CASE_K       "case"  		
CATCH_K      "catch"		
CLASS_K      "class" 		
DEF_K        "def"   		
ELSE_K       "else"  		
ELSIF_K      "elsif" 		
EXTENDS_K	 "extends"    
FALSE_K		 "false"		
FINALLY_K	 "finally"	
FOR_K		 "for"		
IF_K	     "if"    		
IMPLEMENTS_K  "implements" 
IN_K			"in"		
MIXIN_K       "mixin"		
MODULE_K     "module"		
NEXT_K		 "next"		
NEW_K		 "new"		
NIL_K		 "nil"        
PRIVATE_K	 "private"	
PROTECTED_K  "protected"  
PUBLIC_K     "public"		
REQUIRE_K    "require"	
RETURN_K     "return"		
STATIC_K     "static"		
SUPER_K      "super"		
THIS_K       "this"		
THROW_K		 "throw"		
TRUE_K       "true"		
TRY_K		 "try"		
UNLESS_K     "unless"		
UNTIL_K		 "until"		
VAL_K		 "val"		
VAR_K		 "var"		
WHEN_K	     "when"  		
WHILE_K      "while"		
FILE_K		 "__FILE__"	
TARGET_K	 "__TARGET__"	
COLON        ":"
COLON2       "::"
SEMI	     ";"
DOT          "."
DOT2         ".."
COMMA        ","
LT           "<"
LTEQ         "<="
LT2          "<<"
LT2_EQ       "<<="
GT           ">"
GTEQ         ">="
GT2          ">>"
GT2_EQ       ">>="
EQ           "="
EQ2          "=="
NEQ          "!="
EXCL         "!"
TILDE        "~"
CARET        "^"
AND          "&"
AND2         "&&"
AND_EQ       "&="
OR           "|"
OR2          "||"
OR_EQ        "|="
STAR         "*"
STAR_EQ      "*="
MINUS        "-"
MINUS2       "--"
MINUS_EQ     "-="
ARROW		 "->"
PLUS		 "+"
PLUS2		 "++"
PLUS_EQ      "+="
QMARK        "?"
DIV          "/"
DIV_EQ		 "/="
LCURLY       "{"
RCURLY       "}"
LPAREN       "("
RPAREN       ")"
LBRACK       "["
RBRACK       "]"
PCNT		 "%"
PCNT_EQ  	 "%="
IDENT {IDENT}
UNSIGNED_NUMBER {UNSIGNED_NUMBER}
REAL_NUMBER {REAL_NUMBER}
BASED_NUMBER {BASED_NUMBER}
